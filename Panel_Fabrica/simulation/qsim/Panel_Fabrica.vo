// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "02/27/2025 16:57:55"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Panel_Fabrica (
	silo_a,
	silo_b,
	luz_c,
	luz_d,
	alarma);
input 	silo_a;
input 	silo_b;
output 	luz_c;
output 	luz_d;
output 	alarma;

// Design Ports Information
// luz_c	=>  Location: PIN_B1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// luz_d	=>  Location: PIN_C2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// alarma	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// silo_a	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// silo_b	=>  Location: PIN_E4,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \luz_c~output_o ;
wire \luz_d~output_o ;
wire \alarma~output_o ;
wire \silo_a~input_o ;
wire \silo_b~input_o ;
wire \process_0~0_combout ;
wire \process_0~1_combout ;


// Location: IOOBUF_X0_Y27_N16
cycloneiii_io_obuf \luz_c~output (
	.i(\process_0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\luz_c~output_o ),
	.obar());
// synopsys translate_off
defparam \luz_c~output .bus_hold = "false";
defparam \luz_c~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y26_N16
cycloneiii_io_obuf \luz_d~output (
	.i(!\process_0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\luz_d~output_o ),
	.obar());
// synopsys translate_off
defparam \luz_d~output .bus_hold = "false";
defparam \luz_d~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y24_N16
cycloneiii_io_obuf \alarma~output (
	.i(!\process_0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\alarma~output_o ),
	.obar());
// synopsys translate_off
defparam \alarma~output .bus_hold = "false";
defparam \alarma~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y25_N1
cycloneiii_io_ibuf \silo_a~input (
	.i(silo_a),
	.ibar(gnd),
	.o(\silo_a~input_o ));
// synopsys translate_off
defparam \silo_a~input .bus_hold = "false";
defparam \silo_a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y26_N1
cycloneiii_io_ibuf \silo_b~input (
	.i(silo_b),
	.ibar(gnd),
	.o(\silo_b~input_o ));
// synopsys translate_off
defparam \silo_b~input .bus_hold = "false";
defparam \silo_b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N0
cycloneiii_lcell_comb \process_0~0 (
// Equation(s):
// \process_0~0_combout  = (!\silo_b~input_o ) # (!\silo_a~input_o )

	.dataa(\silo_a~input_o ),
	.datab(gnd),
	.datac(\silo_b~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\process_0~0_combout ),
	.cout());
// synopsys translate_off
defparam \process_0~0 .lut_mask = 16'h5F5F;
defparam \process_0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N18
cycloneiii_lcell_comb \process_0~1 (
// Equation(s):
// \process_0~1_combout  = (\silo_a~input_o ) # (\silo_b~input_o )

	.dataa(\silo_a~input_o ),
	.datab(gnd),
	.datac(\silo_b~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\process_0~1_combout ),
	.cout());
// synopsys translate_off
defparam \process_0~1 .lut_mask = 16'hFAFA;
defparam \process_0~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign luz_c = \luz_c~output_o ;

assign luz_d = \luz_d~output_o ;

assign alarma = \alarma~output_o ;

endmodule
