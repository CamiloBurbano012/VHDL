|ascensorfinal
clk => botones:u_botones.clk
clk => salida_persona_pulso_int.CLK
clk => entrada_persona_pulso_int.CLK
clk => salida_persona_pulso_reg.CLK
clk => entrada_persona_pulso_reg.CLK
clk => piso_actual_int[0].CLK
clk => piso_actual_int[1].CLK
clk => piso_actual_int[2].CLK
clk => ram_data_in_vec[0].CLK
clk => ram_data_in_vec[1].CLK
clk => ram_data_in_vec[2].CLK
clk => ram_we_sig.CLK
clk => Debounce_Button:u_debounce_abrir.clk
clk => Debounce_Button:u_debounce_cerrar.clk
clk => Debounce_Button:u_debounce_emergencia.clk
clk => memoria:u_memoria.clk
clk => control:u_control.clk
clk => personas:u_personas.clk
clk => motores:u_motores.clk
clk => puerta:u_puerta.clk
clk => sensor:u_sensor.clk
clk => alarmas:u_alarmas.clk
clk => luces:u_luces.clk
clk => Timer:timer_espera_puerta.clk
clk => Timer:timer_cierre_puerta.clk
clk => Timer:timer_movimiento_piso.clk
reset => process_1.IN0
reset => comb.IN0
reset => comb.IN0
reset => comb.IN0
reset => comb.IN0
reset => botones:u_botones.reset
reset => salida_persona_pulso_int.ACLR
reset => entrada_persona_pulso_int.ACLR
reset => salida_persona_pulso_reg.ACLR
reset => entrada_persona_pulso_reg.ACLR
reset => ram_we_sig.ACLR
reset => Debounce_Button:u_debounce_abrir.reset
reset => Debounce_Button:u_debounce_cerrar.reset
reset => Debounce_Button:u_debounce_emergencia.reset
reset => memoria:u_memoria.reset
reset => control:u_control.reset
reset => personas:u_personas.rst
reset => puerta:u_puerta.reset
reset => sensor:u_sensor.reset
reset => alarmas:u_alarmas.reset
reset => luces:u_luces.reset
reset => ram_data_in_vec[2].ENA
reset => ram_data_in_vec[1].ENA
reset => ram_data_in_vec[0].ENA
botones_subir_piso[0] => botones:u_botones.botones_subir[0]
botones_subir_piso[1] => botones:u_botones.botones_subir[1]
botones_subir_piso[2] => botones:u_botones.botones_subir[2]
botones_subir_piso[3] => botones:u_botones.botones_subir[3]
botones_subir_piso[4] => botones:u_botones.botones_subir[4]
botones_bajar_piso[0] => botones:u_botones.botones_bajar[0]
botones_bajar_piso[1] => botones:u_botones.botones_bajar[1]
botones_bajar_piso[2] => botones:u_botones.botones_bajar[2]
botones_bajar_piso[3] => botones:u_botones.botones_bajar[3]
botones_bajar_piso[4] => botones:u_botones.botones_bajar[4]
botones_cabina[0] => botones:u_botones.botones_cabina[0]
botones_cabina[1] => botones:u_botones.botones_cabina[1]
botones_cabina[2] => botones:u_botones.botones_cabina[2]
botones_cabina[3] => botones:u_botones.botones_cabina[3]
botones_cabina[4] => botones:u_botones.botones_cabina[4]
boton_abrir => Debounce_Button:u_debounce_abrir.button_in
boton_cerrar => Debounce_Button:u_debounce_cerrar.button_in
boton_emergencia => Debounce_Button:u_debounce_emergencia.button_in
switch_entrada_personas => process_2.IN1
switch_entrada_personas => entrada_persona_pulso_reg.DATAIN
switch_salida_personas => process_2.IN1
switch_salida_personas => salida_persona_pulso_reg.DATAIN
fallo_energia => process_1.IN1
fallo_energia => comb.IN1
fallo_energia => comb.IN1
fallo_energia => process_3.IN1
fallo_energia => comb.IN1
fallo_energia => comb.IN1
fallo_energia => comb.IN1
fallo_energia => control:u_control.fallo_energia
fallo_energia => puerta:u_puerta.fallo_energia
ir_sensors[0] => sensor:u_sensor.ir_sensors[0]
ir_sensors[0] => control:u_control.sensor_ir_puerta
ir_sensors[1] => sensor:u_sensor.ir_sensors[1]
ir_sensors[2] => sensor:u_sensor.ir_sensors[2]
ir_sensors[3] => sensor:u_sensor.ir_sensors[3]
ir_sensors[4] => sensor:u_sensor.ir_sensors[4]
pwm_motor <= motores:u_motores.pwm_motor
in1_motor <= motores:u_motores.in1_motor
in2_motor <= motores:u_motores.in2_motor
puerta_abierta <= puerta:u_puerta.puerta_abierta
luces_cabina <= luces:u_luces.luz_cabina
alarma_sonora <= alarmas:u_alarmas.alarma_sonora
alarma_visual <= alarmas:u_alarmas.alarma_visual
luz_emergencia_out <= luces:u_luces.luz_emergencia
display_piso0[0] <= Display:u_display_piso0.display[0]
display_piso0[1] <= Display:u_display_piso0.display[1]
display_piso0[2] <= Display:u_display_piso0.display[2]
display_piso0[3] <= Display:u_display_piso0.display[3]
display_piso0[4] <= Display:u_display_piso0.display[4]
display_piso0[5] <= Display:u_display_piso0.display[5]
display_piso0[6] <= Display:u_display_piso0.display[6]
display_piso1[0] <= Display:u_display_piso1.display[0]
display_piso1[1] <= Display:u_display_piso1.display[1]
display_piso1[2] <= Display:u_display_piso1.display[2]
display_piso1[3] <= Display:u_display_piso1.display[3]
display_piso1[4] <= Display:u_display_piso1.display[4]
display_piso1[5] <= Display:u_display_piso1.display[5]
display_piso1[6] <= Display:u_display_piso1.display[6]
display_piso2[0] <= Display:u_display_piso2.display[0]
display_piso2[1] <= Display:u_display_piso2.display[1]
display_piso2[2] <= Display:u_display_piso2.display[2]
display_piso2[3] <= Display:u_display_piso2.display[3]
display_piso2[4] <= Display:u_display_piso2.display[4]
display_piso2[5] <= Display:u_display_piso2.display[5]
display_piso2[6] <= Display:u_display_piso2.display[6]
display_piso3[0] <= Display:u_display_piso3.display[0]
display_piso3[1] <= Display:u_display_piso3.display[1]
display_piso3[2] <= Display:u_display_piso3.display[2]
display_piso3[3] <= Display:u_display_piso3.display[3]
display_piso3[4] <= Display:u_display_piso3.display[4]
display_piso3[5] <= Display:u_display_piso3.display[5]
display_piso3[6] <= Display:u_display_piso3.display[6]
display_piso4[0] <= Display:u_display_piso4.display[0]
display_piso4[1] <= Display:u_display_piso4.display[1]
display_piso4[2] <= Display:u_display_piso4.display[2]
display_piso4[3] <= Display:u_display_piso4.display[3]
display_piso4[4] <= Display:u_display_piso4.display[4]
display_piso4[5] <= Display:u_display_piso4.display[5]
display_piso4[6] <= Display:u_display_piso4.display[6]
display_interno[0] <= Display:u_display_interno.display[0]
display_interno[1] <= Display:u_display_interno.display[1]
display_interno[2] <= Display:u_display_interno.display[2]
display_interno[3] <= Display:u_display_interno.display[3]
display_interno[4] <= Display:u_display_interno.display[4]
display_interno[5] <= Display:u_display_interno.display[5]
display_interno[6] <= Display:u_display_interno.display[6]


|ascensorfinal|botones:u_botones
clk => reg2_cabina[0].CLK
clk => reg2_cabina[1].CLK
clk => reg2_cabina[2].CLK
clk => reg2_cabina[3].CLK
clk => reg2_cabina[4].CLK
clk => reg1_cabina[0].CLK
clk => reg1_cabina[1].CLK
clk => reg1_cabina[2].CLK
clk => reg1_cabina[3].CLK
clk => reg1_cabina[4].CLK
clk => reg2_bajar[0].CLK
clk => reg2_bajar[1].CLK
clk => reg2_bajar[2].CLK
clk => reg2_bajar[3].CLK
clk => reg2_bajar[4].CLK
clk => reg1_bajar[0].CLK
clk => reg1_bajar[1].CLK
clk => reg1_bajar[2].CLK
clk => reg1_bajar[3].CLK
clk => reg1_bajar[4].CLK
clk => reg2_subir[0].CLK
clk => reg2_subir[1].CLK
clk => reg2_subir[2].CLK
clk => reg2_subir[3].CLK
clk => reg2_subir[4].CLK
clk => reg1_subir[0].CLK
clk => reg1_subir[1].CLK
clk => reg1_subir[2].CLK
clk => reg1_subir[3].CLK
clk => reg1_subir[4].CLK
reset => reg2_cabina[0].ACLR
reset => reg2_cabina[1].ACLR
reset => reg2_cabina[2].ACLR
reset => reg2_cabina[3].ACLR
reset => reg2_cabina[4].ACLR
reset => reg1_cabina[0].ACLR
reset => reg1_cabina[1].ACLR
reset => reg1_cabina[2].ACLR
reset => reg1_cabina[3].ACLR
reset => reg1_cabina[4].ACLR
reset => reg2_bajar[0].ACLR
reset => reg2_bajar[1].ACLR
reset => reg2_bajar[2].ACLR
reset => reg2_bajar[3].ACLR
reset => reg2_bajar[4].ACLR
reset => reg1_bajar[0].ACLR
reset => reg1_bajar[1].ACLR
reset => reg1_bajar[2].ACLR
reset => reg1_bajar[3].ACLR
reset => reg1_bajar[4].ACLR
reset => reg2_subir[0].ACLR
reset => reg2_subir[1].ACLR
reset => reg2_subir[2].ACLR
reset => reg2_subir[3].ACLR
reset => reg2_subir[4].ACLR
reset => reg1_subir[0].ACLR
reset => reg1_subir[1].ACLR
reset => reg1_subir[2].ACLR
reset => reg1_subir[3].ACLR
reset => reg1_subir[4].ACLR
botones_subir[0] => reg1_subir[0].DATAIN
botones_subir[1] => reg1_subir[1].DATAIN
botones_subir[2] => reg1_subir[2].DATAIN
botones_subir[3] => reg1_subir[3].DATAIN
botones_subir[4] => reg1_subir[4].DATAIN
botones_bajar[0] => reg1_bajar[0].DATAIN
botones_bajar[1] => reg1_bajar[1].DATAIN
botones_bajar[2] => reg1_bajar[2].DATAIN
botones_bajar[3] => reg1_bajar[3].DATAIN
botones_bajar[4] => reg1_bajar[4].DATAIN
botones_cabina[0] => reg1_cabina[0].DATAIN
botones_cabina[1] => reg1_cabina[1].DATAIN
botones_cabina[2] => reg1_cabina[2].DATAIN
botones_cabina[3] => reg1_cabina[3].DATAIN
botones_cabina[4] => reg1_cabina[4].DATAIN
subir_filtrado[0] <= reg2_subir[0].DB_MAX_OUTPUT_PORT_TYPE
subir_filtrado[1] <= reg2_subir[1].DB_MAX_OUTPUT_PORT_TYPE
subir_filtrado[2] <= reg2_subir[2].DB_MAX_OUTPUT_PORT_TYPE
subir_filtrado[3] <= reg2_subir[3].DB_MAX_OUTPUT_PORT_TYPE
subir_filtrado[4] <= reg2_subir[4].DB_MAX_OUTPUT_PORT_TYPE
bajar_filtrado[0] <= reg2_bajar[0].DB_MAX_OUTPUT_PORT_TYPE
bajar_filtrado[1] <= reg2_bajar[1].DB_MAX_OUTPUT_PORT_TYPE
bajar_filtrado[2] <= reg2_bajar[2].DB_MAX_OUTPUT_PORT_TYPE
bajar_filtrado[3] <= reg2_bajar[3].DB_MAX_OUTPUT_PORT_TYPE
bajar_filtrado[4] <= reg2_bajar[4].DB_MAX_OUTPUT_PORT_TYPE
cabina_filtrado[0] <= reg2_cabina[0].DB_MAX_OUTPUT_PORT_TYPE
cabina_filtrado[1] <= reg2_cabina[1].DB_MAX_OUTPUT_PORT_TYPE
cabina_filtrado[2] <= reg2_cabina[2].DB_MAX_OUTPUT_PORT_TYPE
cabina_filtrado[3] <= reg2_cabina[3].DB_MAX_OUTPUT_PORT_TYPE
cabina_filtrado[4] <= reg2_cabina[4].DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Debounce_Button:u_debounce_abrir
clk => button_state.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => button_sync_reg2.CLK
clk => button_sync_reg1.CLK
reset => button_state.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => button_sync_reg2.ACLR
reset => button_sync_reg1.ACLR
button_in => button_sync_reg1.DATAIN
button_out <= button_state.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Debounce_Button:u_debounce_cerrar
clk => button_state.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => button_sync_reg2.CLK
clk => button_sync_reg1.CLK
reset => button_state.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => button_sync_reg2.ACLR
reset => button_sync_reg1.ACLR
button_in => button_sync_reg1.DATAIN
button_out <= button_state.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Debounce_Button:u_debounce_emergencia
clk => button_state.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => button_sync_reg2.CLK
clk => button_sync_reg1.CLK
reset => button_state.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => button_sync_reg2.ACLR
reset => button_sync_reg1.ACLR
button_in => button_sync_reg1.DATAIN
button_out <= button_state.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|memoria:u_memoria
clk => fifo_memory~6.CLK
clk => fifo_memory~0.CLK
clk => fifo_memory~1.CLK
clk => fifo_memory~2.CLK
clk => fifo_memory~3.CLK
clk => fifo_memory~4.CLK
clk => fifo_memory~5.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => rd_ptr_reg[0].CLK
clk => rd_ptr_reg[1].CLK
clk => rd_ptr_reg[2].CLK
clk => rd_ptr_reg[3].CLK
clk => wr_ptr_reg[0].CLK
clk => wr_ptr_reg[1].CLK
clk => wr_ptr_reg[2].CLK
clk => wr_ptr_reg[3].CLK
clk => fifo_memory.CLK0
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => rd_ptr_reg[0].ACLR
reset => rd_ptr_reg[1].ACLR
reset => rd_ptr_reg[2].ACLR
reset => rd_ptr_reg[3].ACLR
reset => wr_ptr_reg[0].ACLR
reset => wr_ptr_reg[1].ACLR
reset => wr_ptr_reg[2].ACLR
reset => wr_ptr_reg[3].ACLR
we => process_0.IN0
we => wr_ptr_next.IN1
we => process_0.IN0
re => process_0.IN1
re => rd_ptr_next.IN1
re => process_0.IN1
data_in[0] => fifo_memory~5.DATAIN
data_in[0] => fifo_memory.DATAIN
data_in[1] => fifo_memory~4.DATAIN
data_in[1] => fifo_memory.DATAIN1
data_in[2] => fifo_memory~3.DATAIN
data_in[2] => fifo_memory.DATAIN2
data_out[0] <= fifo_memory.DATAOUT
data_out[1] <= fifo_memory.DATAOUT1
data_out[2] <= fifo_memory.DATAOUT2
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
full <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|control:u_control
clk => reg_piso_destino[0].CLK
clk => reg_piso_destino[1].CLK
clk => reg_piso_destino[2].CLK
clk => estado_actual~1.DATAIN
reset => reg_piso_destino[0].ACLR
reset => reg_piso_destino[1].ACLR
reset => reg_piso_destino[2].ACLR
reset => estado_actual~3.DATAIN
ram_empty => siguiente_estado.OUTPUTSELECT
ram_empty => siguiente_estado.OUTPUTSELECT
ram_empty => siguiente_estado.DATAA
ram_data_out[0] => next_piso_destino.DATAB
ram_data_out[1] => next_piso_destino.DATAB
ram_data_out[2] => next_piso_destino.DATAB
personas_actuales[0] => LessThan2.IN8
personas_actuales[0] => LessThan3.IN8
personas_actuales[1] => LessThan2.IN7
personas_actuales[1] => LessThan3.IN7
personas_actuales[2] => LessThan2.IN6
personas_actuales[2] => LessThan3.IN6
personas_actuales[3] => LessThan2.IN5
personas_actuales[3] => LessThan3.IN5
fallo_energia => process_1.IN0
fallo_energia => process_1.IN0
timer_puerta_done => ~NO_FANOUT~
timer_cierre_puerta_done => process_1.IN0
timer_piso_done => siguiente_estado.OUTPUTSELECT
timer_piso_done => siguiente_estado.OUTPUTSELECT
timer_piso_done => motor_subir_int.OUTPUTSELECT
timer_piso_done => motor_bajar_int.OUTPUTSELECT
timer_piso_done => siguiente_estado.DATAA
sensor_ir_puerta => process_1.IN0
sensor_ir_puerta => process_1.IN1
piso_actual[0] => Equal0.IN2
piso_actual[0] => LessThan0.IN3
piso_actual[0] => LessThan1.IN3
piso_actual[1] => Equal0.IN1
piso_actual[1] => LessThan0.IN2
piso_actual[1] => LessThan1.IN2
piso_actual[2] => Equal0.IN0
piso_actual[2] => LessThan0.IN1
piso_actual[2] => LessThan1.IN1
boton_abrir_debounced => process_1.IN1
boton_cerrar_debounced => process_1.IN1
boton_emergencia_debounced => process_1.IN1
boton_emergencia_debounced => process_1.IN1
cmd_abrir_puerta <= cmd_abrir_puerta.DB_MAX_OUTPUT_PORT_TYPE
cmd_cerrar_puerta <= cmd_cerrar_puerta.DB_MAX_OUTPUT_PORT_TYPE
motor_subir <= motor_subir_int.DB_MAX_OUTPUT_PORT_TYPE
motor_bajar <= motor_bajar_int.DB_MAX_OUTPUT_PORT_TYPE
piso_destino[0] <= reg_piso_destino[0].DB_MAX_OUTPUT_PORT_TYPE
piso_destino[1] <= reg_piso_destino[1].DB_MAX_OUTPUT_PORT_TYPE
piso_destino[2] <= reg_piso_destino[2].DB_MAX_OUTPUT_PORT_TYPE
ram_re <= ram_re.DB_MAX_OUTPUT_PORT_TYPE
alarma_sonora_fsm <= alarma_sonora_fsm.DB_MAX_OUTPUT_PORT_TYPE
alarma_visual_fsm <= alarma_visual_fsm.DB_MAX_OUTPUT_PORT_TYPE
luces_cabina_fsm <= luces_cabina_fsm.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|personas:u_personas
clk => total[0].CLK
clk => total[1].CLK
clk => total[2].CLK
clk => total[3].CLK
rst => total[0].ACLR
rst => total[1].ACLR
rst => total[2].ACLR
rst => total[3].ACLR
personas_entraron[0] => Add0.IN4
personas_entraron[1] => Add0.IN3
personas_entraron[2] => Add0.IN2
personas_entraron[3] => Add0.IN1
personas_salieron[0] => Add1.IN10
personas_salieron[1] => Add1.IN9
personas_salieron[2] => Add1.IN8
personas_salieron[3] => Add1.IN7
sobrepeso <= LessThan2.DB_MAX_OUTPUT_PORT_TYPE
personas_actuales[0] <= total[0].DB_MAX_OUTPUT_PORT_TYPE
personas_actuales[1] <= total[1].DB_MAX_OUTPUT_PORT_TYPE
personas_actuales[2] <= total[2].DB_MAX_OUTPUT_PORT_TYPE
personas_actuales[3] <= total[3].DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|motores:u_motores
clk => in2_int.CLK
clk => in1_int.CLK
clk => pwm_int.CLK
reset => in2_int.ACLR
reset => in1_int.ACLR
reset => pwm_int.ACLR
piso_actual[0] => LessThan0.IN3
piso_actual[0] => LessThan1.IN3
piso_actual[1] => LessThan0.IN2
piso_actual[1] => LessThan1.IN2
piso_actual[2] => LessThan0.IN1
piso_actual[2] => LessThan1.IN1
piso_destino[0] => LessThan0.IN6
piso_destino[0] => LessThan1.IN6
piso_destino[1] => LessThan0.IN5
piso_destino[1] => LessThan1.IN5
piso_destino[2] => LessThan0.IN4
piso_destino[2] => LessThan1.IN4
pwm_motor <= pwm_int.DB_MAX_OUTPUT_PORT_TYPE
in1_motor <= in1_int.DB_MAX_OUTPUT_PORT_TYPE
in2_motor <= in2_int.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|puerta:u_puerta
clk => clk_1kHz.CLK
clk => contador_div[0].CLK
clk => contador_div[1].CLK
clk => contador_div[2].CLK
clk => contador_div[3].CLK
clk => contador_div[4].CLK
clk => contador_div[5].CLK
clk => contador_div[6].CLK
clk => contador_div[7].CLK
clk => contador_div[8].CLK
clk => contador_div[9].CLK
clk => contador_div[10].CLK
clk => contador_div[11].CLK
clk => contador_div[12].CLK
clk => contador_div[13].CLK
clk => contador_div[14].CLK
clk => contador_div[15].CLK
reset => toggle_alarma.ACLR
reset => contador_05s[0].ACLR
reset => contador_05s[1].ACLR
reset => contador_05s[2].ACLR
reset => contador_05s[3].ACLR
reset => contador_05s[4].ACLR
reset => contador_05s[5].ACLR
reset => contador_05s[6].ACLR
reset => contador_05s[7].ACLR
reset => contador_05s[8].ACLR
reset => contador_45s[0].ACLR
reset => contador_45s[1].ACLR
reset => contador_45s[2].ACLR
reset => contador_45s[3].ACLR
reset => contador_45s[4].ACLR
reset => contador_45s[5].ACLR
reset => contador_45s[6].ACLR
reset => contador_45s[7].ACLR
reset => contador_45s[8].ACLR
reset => contador_45s[9].ACLR
reset => contador_45s[10].ACLR
reset => contador_45s[11].ACLR
reset => contador_45s[12].ACLR
reset => contador_45s[13].ACLR
reset => contador_45s[14].ACLR
reset => contador_45s[15].ACLR
reset => contador_10s[0].ACLR
reset => contador_10s[1].ACLR
reset => contador_10s[2].ACLR
reset => contador_10s[3].ACLR
reset => contador_10s[4].ACLR
reset => contador_10s[5].ACLR
reset => contador_10s[6].ACLR
reset => contador_10s[7].ACLR
reset => contador_10s[8].ACLR
reset => contador_10s[9].ACLR
reset => contador_10s[10].ACLR
reset => contador_10s[11].ACLR
reset => contador_10s[12].ACLR
reset => contador_10s[13].ACLR
reset => clk_1kHz.ACLR
reset => contador_div[0].ACLR
reset => contador_div[1].ACLR
reset => contador_div[2].ACLR
reset => contador_div[3].ACLR
reset => contador_div[4].ACLR
reset => contador_div[5].ACLR
reset => contador_div[6].ACLR
reset => contador_div[7].ACLR
reset => contador_div[8].ACLR
reset => contador_div[9].ACLR
reset => contador_div[10].ACLR
reset => contador_div[11].ACLR
reset => contador_div[12].ACLR
reset => contador_div[13].ACLR
reset => contador_div[14].ACLR
reset => contador_div[15].ACLR
reset => estado_actual~3.DATAIN
abrir => process_2.IN0
cerrar => process_2.IN1
fallo_energia => process_2.IN0
fallo_energia => process_2.IN1
fallo_energia => process_2.IN0
sobrecarga => process_2.IN1
sobrecarga => process_2.IN1
sobrecarga => process_2.IN1
puerta_abierta <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
alarma_sonora <= alarma_sonora.DB_MAX_OUTPUT_PORT_TYPE
alarma_visual <= alarma_visual.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|sensor:u_sensor
clk => error~reg0.CLK
clk => piso_actual[0]~reg0.CLK
clk => piso_actual[1]~reg0.CLK
clk => piso_actual[2]~reg0.CLK
clk => count_debounce[0].CLK
clk => count_debounce[1].CLK
clk => count_debounce[2].CLK
clk => count_debounce[3].CLK
clk => count_debounce[4].CLK
clk => count_debounce[5].CLK
clk => count_debounce[6].CLK
clk => prev_ir[0].CLK
clk => prev_ir[1].CLK
clk => prev_ir[2].CLK
clk => prev_ir[3].CLK
clk => prev_ir[4].CLK
clk => debounced_ir[0].CLK
clk => debounced_ir[1].CLK
clk => debounced_ir[2].CLK
clk => debounced_ir[3].CLK
clk => debounced_ir[4].CLK
reset => error~reg0.ACLR
reset => piso_actual[0]~reg0.ACLR
reset => piso_actual[1]~reg0.ACLR
reset => piso_actual[2]~reg0.ACLR
reset => count_debounce[0].ACLR
reset => count_debounce[1].ACLR
reset => count_debounce[2].ACLR
reset => count_debounce[3].ACLR
reset => count_debounce[4].ACLR
reset => count_debounce[5].ACLR
reset => count_debounce[6].ACLR
reset => prev_ir[0].ACLR
reset => prev_ir[1].ACLR
reset => prev_ir[2].ACLR
reset => prev_ir[3].ACLR
reset => prev_ir[4].ACLR
reset => debounced_ir[0].ACLR
reset => debounced_ir[1].ACLR
reset => debounced_ir[2].ACLR
reset => debounced_ir[3].ACLR
reset => debounced_ir[4].ACLR
ir_sensors[0] => Equal0.IN4
ir_sensors[0] => debounced_ir.DATAA
ir_sensors[0] => prev_ir[0].DATAIN
ir_sensors[1] => Equal0.IN3
ir_sensors[1] => debounced_ir.DATAA
ir_sensors[1] => prev_ir[1].DATAIN
ir_sensors[2] => Equal0.IN2
ir_sensors[2] => debounced_ir.DATAA
ir_sensors[2] => prev_ir[2].DATAIN
ir_sensors[3] => Equal0.IN1
ir_sensors[3] => debounced_ir.DATAA
ir_sensors[3] => prev_ir[3].DATAIN
ir_sensors[4] => Equal0.IN0
ir_sensors[4] => debounced_ir.DATAA
ir_sensors[4] => prev_ir[4].DATAIN
piso_actual[0] <= piso_actual[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
piso_actual[1] <= piso_actual[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
piso_actual[2] <= piso_actual[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error <= error~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|alarmas:u_alarmas
clk => alarma_visual~reg0.CLK
clk => alarma_sonora~reg0.CLK
reset => alarma_visual~reg0.ACLR
reset => alarma_sonora~reg0.ACLR
puerta_abriendo => process_0.IN0
puerta_cerrando => process_0.IN1
sobrecarga => alarma_sonora.OUTPUTSELECT
sobrecarga => alarma_visual.OUTPUTSELECT
fallo_energia => alarma_sonora.OUTPUTSELECT
fallo_energia => alarma_visual.OUTPUTSELECT
alarma_sonora <= alarma_sonora~reg0.DB_MAX_OUTPUT_PORT_TYPE
alarma_visual <= alarma_visual~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|luces:u_luces
clk => state_reg~1.DATAIN
reset => state_reg~3.DATAIN
estado_ascensor[0] => Equal0.IN2
estado_ascensor[0] => Equal1.IN1
estado_ascensor[1] => Equal0.IN1
estado_ascensor[1] => Equal1.IN0
estado_ascensor[2] => Equal0.IN0
estado_ascensor[2] => Equal1.IN2
luz_cabina <= <VCC>
luz_emergencia <= luz_emergencia.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Display:u_display_piso0
piso[0] => Mux1.IN5
piso[0] => Mux2.IN5
piso[0] => Mux3.IN10
piso[0] => Mux4.IN5
piso[0] => Mux5.IN10
piso[1] => Mux0.IN5
piso[1] => Mux1.IN4
piso[1] => Mux3.IN9
piso[1] => Mux4.IN4
piso[1] => Mux5.IN9
piso[2] => Mux0.IN4
piso[2] => Mux2.IN4
piso[2] => Mux3.IN8
piso[2] => Mux5.IN8
display[0] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= <GND>
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Display:u_display_piso1
piso[0] => Mux1.IN5
piso[0] => Mux2.IN5
piso[0] => Mux3.IN10
piso[0] => Mux4.IN5
piso[0] => Mux5.IN10
piso[1] => Mux0.IN5
piso[1] => Mux1.IN4
piso[1] => Mux3.IN9
piso[1] => Mux4.IN4
piso[1] => Mux5.IN9
piso[2] => Mux0.IN4
piso[2] => Mux2.IN4
piso[2] => Mux3.IN8
piso[2] => Mux5.IN8
display[0] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= <GND>
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Display:u_display_piso2
piso[0] => Mux1.IN5
piso[0] => Mux2.IN5
piso[0] => Mux3.IN10
piso[0] => Mux4.IN5
piso[0] => Mux5.IN10
piso[1] => Mux0.IN5
piso[1] => Mux1.IN4
piso[1] => Mux3.IN9
piso[1] => Mux4.IN4
piso[1] => Mux5.IN9
piso[2] => Mux0.IN4
piso[2] => Mux2.IN4
piso[2] => Mux3.IN8
piso[2] => Mux5.IN8
display[0] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= <GND>
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Display:u_display_piso3
piso[0] => Mux1.IN5
piso[0] => Mux2.IN5
piso[0] => Mux3.IN10
piso[0] => Mux4.IN5
piso[0] => Mux5.IN10
piso[1] => Mux0.IN5
piso[1] => Mux1.IN4
piso[1] => Mux3.IN9
piso[1] => Mux4.IN4
piso[1] => Mux5.IN9
piso[2] => Mux0.IN4
piso[2] => Mux2.IN4
piso[2] => Mux3.IN8
piso[2] => Mux5.IN8
display[0] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= <GND>
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Display:u_display_piso4
piso[0] => Mux1.IN5
piso[0] => Mux2.IN5
piso[0] => Mux3.IN10
piso[0] => Mux4.IN5
piso[0] => Mux5.IN10
piso[1] => Mux0.IN5
piso[1] => Mux1.IN4
piso[1] => Mux3.IN9
piso[1] => Mux4.IN4
piso[1] => Mux5.IN9
piso[2] => Mux0.IN4
piso[2] => Mux2.IN4
piso[2] => Mux3.IN8
piso[2] => Mux5.IN8
display[0] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= <GND>
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Display:u_display_interno
piso[0] => Mux1.IN5
piso[0] => Mux2.IN5
piso[0] => Mux3.IN10
piso[0] => Mux4.IN5
piso[0] => Mux5.IN10
piso[1] => Mux0.IN5
piso[1] => Mux1.IN4
piso[1] => Mux3.IN9
piso[1] => Mux4.IN4
piso[1] => Mux5.IN9
piso[2] => Mux0.IN4
piso[2] => Mux2.IN4
piso[2] => Mux3.IN8
piso[2] => Mux5.IN8
display[0] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= <GND>
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Timer:timer_espera_puerta
clk => timer_running.CLK
clk => done~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
rst => timer_running.ACLR
rst => done~reg0.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => done.OUTPUTSELECT
start => timer_running.OUTPUTSELECT
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Timer:timer_cierre_puerta
clk => timer_running.CLK
clk => done~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
rst => timer_running.ACLR
rst => done~reg0.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => done.OUTPUTSELECT
start => timer_running.OUTPUTSELECT
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ascensorfinal|Timer:timer_movimiento_piso
clk => timer_running.CLK
clk => done~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
rst => timer_running.ACLR
rst => done~reg0.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => count.OUTPUTSELECT
start => done.OUTPUTSELECT
start => timer_running.OUTPUTSELECT
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE


